import re
from states import Form
from aiogram import BaseMiddleware
from aiogram.fsm.context import FSMContext
from buttons.profile_markup import get_profile_markup


class Middleware(BaseMiddleware):
    def __init__(self, self_bot):
        self.self_bot = self_bot

    async def __call__(self, *args, **kwargs):
        pass


class MiddlewareExitFromTheGroup(Middleware):
    async def __call__(self, handler, event, data):
        if Form.group and re.search('–í—ã–π—Ç–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞', event.text):
            await self.self_bot.bot.send_message(event.chat.id, '‚úçüèº –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É –ø–æ–∑–∂–µ, –Ω–æ –ø–æ–∫–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ üìù:\n1. –†–∞—Å—Å—ã–ª–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n–ù–æ –≤—ã –≤—Å–µ —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å Gigachat –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π –≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ä–∞–º–∫–∞—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.', reply_markup=get_profile_markup())
            state: FSMContext = data.get('state')
            await state.clear()

            self.self_bot.cursor.executemany("""INSERT INTO students VALUES(%s, %s, %s)""", [(None, event.chat.id, None)])
            self.self_bot.connection.commit()
        else:
            return await handler(event, data)


class MiddlewareExitFromTheChangeGroup(Middleware):
    async def __call__(self, handler, event, data):
        if Form.chane_group and re.search('–í—ã–π—Ç–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞', event.text):
            await self.self_bot.bot.send_message(event.chat.id, '‚è™Ô∏é –í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞', reply_markup=get_profile_markup())

            state: FSMContext = data.get('state')
            await state.clear()

        else:
            return await handler(event, data)


class MiddlewareExitFromTheDialog(Middleware):
    async def __call__(self, handler, event, data):
        if Form.dialog and re.search('–í—ã–π—Ç–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞', event.text):
            await self.self_bot.bot.send_message(event.chat.id, '‚è™Ô∏é –í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞', reply_markup=get_profile_markup())
            state: FSMContext = data.get('state')
            await state.clear()

        else:
            return await handler(event, data)